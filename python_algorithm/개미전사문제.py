# 다이나믹 프로그래밍을 이용한 개미 식량창고 문제 !

# 주어진 문제에서 식량창고의 갯수가 최대 100개 이기때문에 dp 테이블도 100개로 만들어준다

# 창고 갯수
n = 4
# 창고마다 들어있는 식량 크기!
array = [1, 3, 1, 5]

d = [0] * 100

# dp 테이블 기본값 셋팅해주기!
d[0] = array[0]
# dp 테이블 두번째에 넣어놓을 값은 주어진 array 에서 첫번째 값과 두번째값을 비교 후 더 큰 값을 넣어놓기!
# 왜냐면 주어진 문제에서는 창고에서 가져올 수 있는 가장 큰 값을 output 해야 하는데,
# 창고를 약탈할 때 조건이, 연달아 이어져 있는 창고는 약탈할 수 없다는 조건이 있기 때문!
# 그래서 창고 한칸의 값이랑 - 2 와 현재 창고의 값을 더한 값을 비교하던가, 이어져있는 창고는 각각의 창고 값을 비교해서 dp 테이블에 넣어놓기!

d[1] = max(array[0], array[1])

for i in range(2, n):
    d[i] = max(array[i], array[i] + array[i - 2], array[i - 1])


print(d[n - 1])



